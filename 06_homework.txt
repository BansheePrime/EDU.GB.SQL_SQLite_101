'''Задание
Работаем с базой данных учителей teachers.db. 
Для каждого из заданий требуется создать запрос, сдать надо только код запросов в текстовом файле. 
Для решений воспользуйтесь объединением JOIN, не используйте вложенные запросы и объединение UNION.
'''

1. Покажите информацию по потокам. 
В отчет выведите номер потока, название курса и дату начала занятий.
1
sqlite> SELECT stream_number,
        (SELECT name FROM courses_tb WHERE id = course_id) AS course_name,
        started_at
        FROM streams_tb;

Вариант с JOIN:
sqlite> SELECT 
        stream_number, 
        name,
        started_at 
        FROM streams_tb 
        JOIN courses_tb 
            ON streams_tb.course_id = courses_tb.id;
        
        stream_number  name                    started_at
        -------------  ----------------------  ----------
        165            Linux. Рабочая станция  18.08.2020
        178            Основы Python           02.10.2020
        203            Базы данных             12.11.2020
        210            Базы данных             03.12.2020


/*****/ 

2. Найдите общее количество учеников для каждого курса. 
В отчёт выведите название курса и количество учеников по всем потокам курса.
2
sqlite> SELECT
        name AS course_name,
        SUM(students_number) AS students_total
        FROM courses_tb
        JOIN streams_tb
            ON courses_tb.id = streams_tb.course_id
        GROUP BY course_id;

        course_name             students_total
        ----------------------  --------------
        Базы данных             76            
        Основы Python           37            
        Linux. Рабочая станция  34

/*****/ 

3. Для всех учителей найдите среднюю оценку по всем проведённым потокам. 
В отчёт выведите идентификатор, фамилию и имя учителя, среднюю оценку по всем проведенным потокам. 
Важно чтобы учителя, у которых не было потоков, также попали в выборку.
3
sqlite> SELECT
        id,
        surname,
        name,
        AVG(grade) AS avg_stream_grade
        FROM teachers_tb
        LEFT JOIN grades_tb
            ON teachers_tb.id = grades_tb.teacher_id
        GROUP BY teacher_id;

        teacher_id  surname   name     avg_stream_grade
        ----------  --------  -------  ----------------
        4           Ващенко   Никита                   
        1           Савельев  Николай  4.85            
        2           Петрова   Наталья  4.9             
        3           Малышева  Елена    4.7 

/*****/ 

4. Дополнительное задание. 
Для каждого преподавателя выведите 
a. имя, фамилию, 
b. минимальное значение успеваемости по всем потокам преподавателя, 
c. название курса, который соответствует потоку с минимальным значением успеваемости, 
d. максимальное значение успеваемости по всем потокам преподавателя, 
e. название курса, соответствующий потоку с максимальным значением успеваемости.
В дополнительном задании допускается применение вложенных запросов.

4
sqlite> SELECT
        (SELECT name || " " || surname FROM teachers_tb) AS fio,
        MIN AS min_grade,
        'min_course_name' AS min_course,
        MAX AS max_grade,
        'max_course_name' AS max_course
        FROM teachers_tb
        JOIN grades_tb
                ON
        GROUP BY ;

        SELECT
        name || " " || surname AS fio,
        'min_stream_grade' AS min_s_grade,
        'min_course_name' AS min_c_name,
        'max_stream_grade' AS max_s_grade,
        'max_course_name' AS max_c_name
        FROM teachers_tb
        LEFT JOIN streams_tb
        ON 
        (SELECT AVG(grade) AS avg_grade FROM grades_tb GROUP BY teacher_id);


Найдите разницу между средней успеваемостью преподавателя с наивысшим соответствующим значением и 
средней успеваемостью преподавателя с наименьшим значением. 
Средняя успеваемость считается по всем потокам преподавателя.
5
sqlite> SELECT
        MAX(avg_grade) - MIN(avg_grade) AS data
        FROM
        (SELECT AVG(grade) AS avg_grade FROM grades_tb GROUP BY teacher_id);

        data
        ----
        0.2 
/*****/ 
Преподаватель ждет ваше задание до 22 мая, 20:00 +03:00 UTC
/*****/ 
